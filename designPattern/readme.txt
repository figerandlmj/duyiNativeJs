设计模式 原理 UML

模式 写代码的正确套路
	三目表达式 不提倡
	==  隐式转换 不提倡
	一套反复使用，多数人知晓，经过分类，代码设计经验的总结
	高斯求和 1+2+3+...+100 = 101*50
js模式 js设计模式
分类
	创建型 单例模式/抽象工厂/建造者模式/工厂模式/原型模式
	结构型 适配器模式/桥接模式/装饰模式/组合/外观/享元/代理
	行为型 模板方法/命令/迭代器/观察者/中介者/备忘录/解释器/状态/策略/职责链/访问者
少走弯路 提高效率
原则
	单一职责SRP  一个方法做一件事件
	里氏代换LSP  可以替换 超类/父类能访问的地方子类也能
	依赖倒置DIP  只依赖接口，不依赖方法，最常用的原则
	接口分离ISP  大的接口分成小的接口
	迪米特法则LD 最少知道原则，传参越少越好
	开闭原则OCP  面向扩展开放 面向修改关闭
UML
	统一建模语言
	系统前期设计时使用
	Process on  作图工具
	Booch画法 IBM三剑客James  Jacobson  =>  IBM三剑客James 统一UML过程UP
	=> RUP优化


常用设计模式 9

	单例模式
		保证一个类仅有一个实例，并提供一个访问他的全局访问点
	代理模式
		为一个对象提供一个代用品或占位符，以便控制对他的访问
		登录验证
	策略模式
		定义一系列算法，把他们一个个封装起来，并且使他们可以相互替换
	工厂模式
	迭代器模式
		提供一种方法，将对象当中的内部给显示出来，并且不暴露内部是什么样子的
		遍历不同的结构提供统一的接口，从而支持同样的算法在不同的集合结构上进行操作
	装饰者模式
		在不改变原对象的基础上，通过对其进行包装和拓展，使原对象可以满足用户的更复杂要求
	外观模式
	适配器模式
		将一个类（对象）的接口（方法、属性）转换成另一个接口，以满足用户需求，
		使类接口不兼容问题得到解决
	观察者模式
		发布订阅模式    订阅 发布 退订


贪吃蛇小游戏
	蛇头、蛇身子  蛇          组合关系 三线箭头实心菱形
	墙     障碍物             继承关系 空三角
	广场     方格             聚合关系 空菱形三线箭头
	蛇头、蛇身子、食物、障碍物、地面  方格  继承关系

	方格 touch接口  实现关系 虚线空三角